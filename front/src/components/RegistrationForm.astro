---

---
<style>
    form {
        display: flex;
        flex-direction: column;
        gap: 1em;
        width: 45%;

        margin: 0 auto;
    }
     
    input {
        width: 100%;
        height: 3em;

        padding: 1em;
        border: 0.2em black solid;
    }

    button[type=submit] {
        width: 25%;
        padding: 0.7em 2em;
        text-align: center;

        background-color: rgb(237, 234, 228);
        border: 0.1em white solid;
        border-radius: 0.4em;
    }

    .snack {
        position: sticky;
        left: 0;
        top: 0;
    }

    .snack--error {
        color: red;
    }

    .snack--success {
        color: green;
    }
</style>

<div
    role="alert"
    aria-labelledby="alert message:"
    class="snack snack--error hide"
>
    An error has ocurred
</div>
<div
    role="status"
    aria-labelledby="status message:"
    class="snack snack--success hide"
>
    Success update
</div>

<form action="/api/users" method="post">
    <p>Create Account</p>
    <input
        type="email"
        name="email"
        placeholder="email"
        required
    >
    <input
        type="text"
        name="username"
        placeholder="username"
    >
    <input
        type="text"
        name="firstname"
        placeholder="first name"
    >
    <input
        type="text"
        name="lastname"
        placeholder="last name"
    >
    <input
        type="password"
        name="password"
        placeholder="password"
        required
    >
    <input
        type="text"
        name="id"
        placeholder="id"
        required
    >

    <p>Already have an account?</p>
    <p><a href="#">Login</a></p>
    <button type="submit">Submit</button>
</form>

<script>
    function getFormDataByName(form) {
        const inputList = [ ...form.querySelectorAll('[name]') ]

        return inputList
            .map(({ name, value }) => ({ [name]: value }))
            .reduce((acc, el) => ({ ...acc, ...el }), {})
    }
    async function submitForm(url, data) {
        const res = await fetch(url, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(data)
        })

        return res.json()
    }

    function showSnack(role) {
        const snack = document.querySelector(`[role="${role}"]`)!
        snack.classList.remove('hide')

        const fun = () => {
            snack.classList.add('hide')
            if (role === 'status') {
                location.href = 'http://localhost:3000'
            }
        }

        return setTimeout(fun, 5000) 
    }

    const form = document.querySelector('form')!

    form.addEventListener('submit', async (event) => {
        event.preventDefault()

        const data = getFormDataByName(event.target)

        try {
            const res = await submitForm('http://localhost:3000/api/users', data)

            if (res.success) {
                return showSnack('status')
            }
            showSnack('alert')
            
        } catch (error) {
            console.error(error)
            showSnack('alert')
        }
    })
</script>